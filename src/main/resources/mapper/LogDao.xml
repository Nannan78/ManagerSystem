<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nan.log.LogDao">
    <cache type="com.nan.cache.RedisCache" />
    <resultMap type="com.nan.log.Log" id="LogMap">
        <result property="id" column="id" jdbcType="OTHER"/>
        <result property="userId" column="user_id" jdbcType="OTHER"/>
        <result property="logContent" column="log_content" jdbcType="VARCHAR"/>
        <result property="date" column="date" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="LogMap">
        select
          id, user_id, log_content, date
        from jdbc.log
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="LogMap">
        select
          id, user_id, log_content, date
        from jdbc.log order by id desc
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="LogMap">
        select
          id, user_id, log_content, date
        from jdbc.log
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="logContent != null and logContent != ''">
                and log_content = #{logContent}
            </if>
            <if test="date != null">
                and date = #{date}
            </if>
        </where>
    </select>

    <select id="queryAllWithUser" resultType="com.nan.entity.LogWithUser">
        select
        l.id, l.user_id, l.log_content, l.date ,u.username
        from jdbc.log l,jdbc.users u
        where l.user_id=u.id
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into jdbc.log(user_id, log_content, date)
        values (#{userId}, #{logContent}, #{date})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update jdbc.log
        set
                user_id = #{userId},
                log_content = #{logContent},
                date = #{date}
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from jdbc.log where id = #{id}
    </delete>

</mapper>
